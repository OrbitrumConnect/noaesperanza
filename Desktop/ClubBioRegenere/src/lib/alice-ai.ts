// Alice AI Intelligence System
export interface AliceResponse {
  message: string;
  options?: string[];
  phase?: string;
  isEducational?: boolean;
  requiresConsent?: boolean;
}

export class AliceAI {
  private static responses = {
    welcome: {
      message: "Oi, eu sou Alice üëã Sou sua assistente de sa√∫de e bem-estar. Posso te ajudar a organizar sua rotina e montar um Plano MEV personalizado. Nossa plataforma tem e-books, v√≠deos educativos e checklists.",
      options: ["Garantir acesso agora", "Tirar d√∫vidas primeiro"],
      isEducational: true
    },

    educational_disclaimer: {
      message: "‚ö†Ô∏è Lembre-se: posso orientar sobre h√°bitos e rotina, mas n√£o substituo avalia√ß√£o m√©dica. Todo conte√∫do √© educativo e de apoio.",
      options: ["Entendi, vamos come√ßar"]
    },

    questions: {
      identification: [
        "Vamos come√ßar! Qual seu nome completo?",
        "Qual seu melhor e-mail?",
        "E seu WhatsApp para contato?",
        "Em qual cidade voc√™ mora?"
      ],
      measurements: [
        "Agora vamos √†s suas medidas. Qual sua idade?",
        "Qual sua altura em cent√≠metros?",
        "E seu peso atual em kg?"
      ],
      routine: [
        "Me conte sobre sua profiss√£o e hor√°rios de trabalho.",
        "Como est√° seu sono? Quantas horas por noite?",
        "Pratica alguma atividade f√≠sica? Com que frequ√™ncia?",
        "Como √© sua alimenta√ß√£o no dia a dia?",
        "Numa escala de 0 a 10, como est√° seu n√≠vel de estresse?"
      ],
      health: [
        "Tem algum diagn√≥stico m√©dico ou comorbidade?",
        "Toma algum medicamento ou suplemento regularmente?",
        "Tem alguma alergia alimentar ou restri√ß√£o?",
        "Fuma ou consome √°lcool regularmente?"
      ],
      objectives: [
        "Qual seu principal objetivo de sa√∫de? (ex: melhorar sono, reduzir estresse, mais energia)",
        "Tem algum objetivo secund√°rio?"
      ]
    },

    educational_responses: {
      sleep: "Para melhorar seu sono: mantenha hor√°rios regulares, evite telas 30 min antes de dormir, fa√ßa atividades leves √† tarde e crie uma rotina pr√©-sono relaxante.",
      
      nutrition: "Uma alimenta√ß√£o balanceada inclui vegetais, prote√≠nas magras e carboidratos saud√°veis. Posso sugerir trocas inteligentes baseadas nas suas prefer√™ncias.",
      
      exercise: "O ideal s√£o 2-3 sess√µes semanais de exerc√≠cios leves a moderados, al√©m de alongamentos di√°rios e caminhadas.",
      
      hydration: "A meta inicial pode ser 30-35 ml de √°gua por kg de peso corporal por dia. Ajuste conforme seu ritmo e clima.",
      
      stress: "Fa√ßa pausas curtas a cada 2-3 horas e tente exerc√≠cios de respira√ß√£o de 2-5 minutos.",
      
      exams: "Posso explicar exames de forma educativa, mas n√£o interpreto resultados individuais. Para isso, sempre procure seu m√©dico."
    },

    mev_plan_template: {
      nutrition: "ü•ó NUTRI√á√ÉO: 3 refei√ß√µes + 1 lanche, incluindo vegetais, prote√≠nas e carboidratos saud√°veis",
      hydration: "üíß HIDRATA√á√ÉO: Meta personalizada baseada no seu peso",
      sleep: "üò¥ SONO: Hor√°rios regulares e rotina pr√©-sono",
      exercise: "üèÉ‚Äç‚ôÄÔ∏è MOVIMENTO: 2-3 sess√µes semanais + alongamentos di√°rios",
      stress: "üßò‚Äç‚ôÄÔ∏è ESTRESSE: Pausas regulares + exerc√≠cios de respira√ß√£o",
      sun: "‚òÄÔ∏è LUZ/SOL: 10-20 min de exposi√ß√£o solar matinal"
    },

    optional_resources: {
      hertz: "üéµ Trilhas em hertz (432Hz, 528Hz) para relaxamento. S√£o complementares, efeito subjetivo e opcional.",
      pnl: "üß† Exerc√≠cios de PNL para reframing e ancoragem. Educativo e opcional.",
      constellation: "‚≠ê Pr√°ticas de constela√ß√£o e Access Bars para reflex√£o. N√£o substituem consulta m√©dica."
    },

    legal_boundaries: {
      no_prescription: "N√£o posso indicar medicamentos, doses ou produtos espec√≠ficos. Para prescri√ß√£o, consulte um profissional habilitado.",
      no_cure_promise: "N√£o prometo cura ou resultados cl√≠nicos. Todo conte√∫do √© educativo e de apoio √† rotina.",
      emergency: "Se sentir sinais de alerta ou emerg√™ncia, procure imediatamente um servi√ßo m√©dico.",
      medical_evaluation: "Para qualquer avalia√ß√£o cl√≠nica, √© necess√°rio consultar um profissional habilitado."
    },

    emergency_response: {
      message: "üö® Percebi que voc√™ pode estar em uma situa√ß√£o de risco. PROCURE IMEDIATAMENTE um servi√ßo m√©dico de emerg√™ncia ou ligue para:\n\n‚Ä¢ SAMU: 192\n‚Ä¢ CVV: 188\n‚Ä¢ Bombeiros: 193\n\nSua seguran√ßa √© prioridade!",
      requiresConsent: false
    }
  };

  static getWelcomeMessage(): AliceResponse {
    const welcomeMessages = [
      "Oi, eu sou Alice üëã Sou sua assistente de sa√∫de e bem-estar. Posso te ajudar a organizar sua rotina e montar um Plano MEV personalizado. Nossa plataforma tem e-books, v√≠deos educativos e checklists.",
      "Ol√°! Que prazer te conhecer! üåü Sou a Alice e vou te acompanhar na jornada para uma vida mais saud√°vel. Temos recursos incr√≠veis para te apoiar!",
      "Seja muito bem-vinda! üíö Eu sou Alice, pronta para te ajudar com h√°bitos saud√°veis e bem-estar. Como voc√™ se sente sobre cuidar melhor da sua sa√∫de?",
      "Oi querida! ‚ú® Aqui √© a Alice, sua parceira de sa√∫de! Vamos criar juntas uma rotina que fa√ßa voc√™ se sentir incr√≠vel?"
    ];
    
    const randomMessage = welcomeMessages[Math.floor(Math.random() * welcomeMessages.length)];
    
    return {
      message: randomMessage,
      options: ["Garantir acesso agora", "Tirar d√∫vidas primeiro"],
      isEducational: true
    };
  }

  static getEducationalDisclaimer(): AliceResponse {
    return this.responses.educational_disclaimer;
  }

  static getQuestionByPhase(phase: string, questionIndex: number): string {
    const questions = this.responses.questions[phase as keyof typeof this.responses.questions];
    return Array.isArray(questions) ? questions[questionIndex] || "" : "";
  }

  static getEducationalResponse(topic: string): string {
    return this.responses.educational_responses[topic as keyof typeof this.responses.educational_responses] || 
           "Posso ajudar com orienta√ß√µes educativas sobre rotina e h√°bitos. Para avalia√ß√£o cl√≠nica, consulte um profissional habilitado.";
  }

  static generateMEVPlan(userData: any): string {
    const weight = userData.weight || 70;
    const hydrationGoal = Math.round(weight * 35);
    
    return `üéØ **SEU PLANO MEV PERSONALIZADO**

${this.responses.mev_plan_template.nutrition}
üíß **HIDRATA√á√ÉO**: ${hydrationGoal}ml/dia (baseado no seu peso)
${this.responses.mev_plan_template.sleep}
${this.responses.mev_plan_template.exercise}
${this.responses.mev_plan_template.stress}
${this.responses.mev_plan_template.sun}

**üìã CHECKLIST DI√ÅRIO:**
[ ] Hidrata√ß√£o completa
[ ] 3 refei√ß√µes balanceadas
[ ] 30min de movimento
[ ] Exposi√ß√£o solar matinal
[ ] Pausa para respira√ß√£o

‚ö†Ô∏è Lembre-se: Este plano √© educativo e n√£o substitui avalia√ß√£o m√©dica.`;
  }

  static getOptionalResources(): AliceResponse {
    return {
      message: "üåü **RECURSOS OPCIONAIS DISPON√çVEIS:**\n\n" +
               this.responses.optional_resources.hertz + "\n\n" +
               this.responses.optional_resources.pnl + "\n\n" +
               this.responses.optional_resources.constellation,
      options: ["Quero conhecer os √°udios", "Exerc√≠cios de PNL", "Pr√°ticas de reflex√£o", "N√£o preciso agora"]
    };
  }

  static getLegalBoundary(type: string): string {
    return this.responses.legal_boundaries[type as keyof typeof this.responses.legal_boundaries] || 
           this.responses.legal_boundaries.medical_evaluation;
  }

  static detectEmergency(userInput: string): boolean {
    const emergencyKeywords = [
      'suicidio', 'suic√≠dio', 'morrer', 'matar', 'dor intensa', 'falta de ar', 
      'peito dor', 'emergencia', 'emerg√™ncia', 'socorro', 'ajuda urgente',
      'n√£o aguento', 'desespero', 'acabar com tudo'
    ];
    
    return emergencyKeywords.some(keyword => 
      userInput.toLowerCase().includes(keyword)
    );
  }

  static getEmergencyResponse(): AliceResponse {
    return this.responses.emergency_response;
  }

  static processUserInput(input: string, context: any): AliceResponse {
    // Check for emergency first
    if (this.detectEmergency(input)) {
      return this.getEmergencyResponse();
    }

    // Check for medical/prescription requests
    const medicalKeywords = ['remedio', 'rem√©dio', 'medicamento', 'dose', 'mg', 'ml', 'prescri√ß√£o'];
    if (medicalKeywords.some(keyword => input.toLowerCase().includes(keyword))) {
      return {
        message: this.getLegalBoundary('no_prescription'),
        isEducational: true
      };
    }

    // Educational responses based on topic
    const topics = {
      'sono': 'sleep',
      'dormir': 'sleep', 
      'alimenta√ß√£o': 'nutrition',
      'comida': 'nutrition',
      'exercicio': 'exercise',
      'atividade': 'exercise',
      'agua': 'hydration',
      'hidrata√ß√£o': 'hydration',
      'estresse': 'stress',
      'ansiedade': 'stress',
      'exame': 'exams'
    };

    for (const [keyword, topic] of Object.entries(topics)) {
      if (input.toLowerCase().includes(keyword)) {
        return {
          message: this.getEducationalResponse(topic),
          isEducational: true
        };
      }
    }

    return {
      message: "Entendi! Posso ajudar com orienta√ß√µes educativas sobre rotina, sono, alimenta√ß√£o, exerc√≠cios e organiza√ß√£o de h√°bitos. O que gostaria de saber?",
      options: ["Melhorar sono", "Organizar alimenta√ß√£o", "Plano de exerc√≠cios", "Controle de estresse"],
      isEducational: true
    };
  }
}